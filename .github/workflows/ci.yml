name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
        node-installer: [npm, yarn]

    steps:
    - name: Fix git checkout line endings
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v1
    - name: Use Node.js 8.x
      uses: actions/setup-node@v1
      with:
        node-version: 8.x
    - name: Cache node_modules
      uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - name: Install bolt
      shell: bash
      run: |
        case "$(uname -s)" in
          Windows*|CYGWIN*|MINGW*|MSYS*) BOLT_VERSION=0.21.2 ;;
          *) BOLT_VERSION=latest ;;
        esac
        npm install -g bolt@$BOLT_VERSION
    - name: Windows specific setup
      if: matrix.os == 'windows-latest'
      run: |
        $wixToolsetBinPath = ";C:\Program Files (x86)\WiX Toolset v3.11\bin;"
        $env:PATH = $env:PATH + $wixToolsetBinPath
        [Environment]::SetEnvironmentVariable("Path", $env:PATH, [EnvironmentVariableTarget]::Machine)
        if ((Get-Command "light.exe" -ErrorAction SilentlyContinue) -eq $null)
        {
          Write-Host "Unable to find light.exe in your PATH"
        }
        npm config set node-gyp "$($env:GITHUB_WORKSPACE)\node_modules\.bin\node-gyp"
    - name: Install
      run: bolt
    - name: Lint
      run: bolt lint
    - name: Build
      run: bolt build
    - name: Test
      run: bolt coverage
      env:
        CI: true
        NODE_INSTALLER: ${{ matrix.node-installer }}
    - name: Codecov
      run: bolt codecov
