version: 2.1

orbs:
  node: electronjs/node@1.4.1

commands:
  install:
    steps:
      - run: git config --global core.autocrlf input
      - node/install:
          node-version: '18.15.0'
      - checkout
  run-lint-and-build:
    steps:
      - node/install-packages
      - run:
          name: 'Lint codebase'
          command: |
            yarn lint
            yarn syncpack
      - run:
          name: 'Build Electron Forge'
          command: |
            yarn build
  run-fast-tests:
    steps:
      - node/install-packages
      - attach_workspace:
          at: .
      - run:
          name: 'Run fast tests'
          command: |
            yarn test:fast

  run-slow-tests:
    steps:
      - node/install-packages
      - attach_workspace:
          at: .
      - run:
          name: 'Run slow tests'
          command: |
            echo $(circleci tests glob "packages/**/*_spec_slow.ts")
            circleci tests glob "packages/**/*_spec_slow.ts" | circleci tests split --split-by=timings | xargs yarn test

jobs:
  lint-and-build:
    executor: node/linux
    steps:
      - install
      - run-lint-and-build
      - persist_to_workspace:
          root: .
          paths:
            - packages/publisher/s3/dist
            - packages/publisher/github/dist
            - packages/publisher/bitbucket/dist
            - packages/publisher/snapcraft/dist
            - packages/publisher/base/dist
            - packages/publisher/electron-release-server/dist
            - packages/publisher/nucleus/dist
            - packages/plugin/local-electron/dist
            - packages/plugin/auto-unpack-natives/dist
            - packages/plugin/webpack/dist
            - packages/plugin/vite/dist
            - packages/plugin/compile/dist
            - packages/plugin/fuses/dist
            - packages/plugin/base/dist
            - packages/plugin/electronegativity/dist
            - packages/template/vite-typescript/dist
            - packages/template/webpack/dist
            - packages/template/vite/dist
            - packages/template/webpack-typescript/dist
            - packages/template/base/dist
            - packages/utils/test-utils/dist
            - packages/utils/types/dist
            - packages/utils/core-utils/dist
            - packages/utils/web-multi-logger/dist
            - packages/maker/flatpak/dist
            - packages/maker/appx/dist
            - packages/maker/zip/dist
            - packages/maker/deb/dist
            - packages/maker/snap/dist
            - packages/maker/wix/dist
            - packages/maker/dmg/dist
            - packages/maker/rpm/dist
            - packages/maker/squirrel/dist
            - packages/maker/base/dist
            - packages/maker/pkg/dist
            - packages/api/core/dist
            - packages/api/cli/dist
            - packages/external/create-electron-app/dist

  fast-tests:
    parameters:
      executor:
        type: string
      arch:
        type: enum
        enum: ['x64', 'arm64']
    executor: << parameters.executor >>
    steps:
      - install
      - when:
          condition:
            equal: [node/linux, << parameters.executor >>]
          steps:
            - run:
                name: Linux specific setup
                command: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    --no-install-recommends \
                    xvfb \
                    libnss3 \
                    libasound2 \
                    libatk1.0-0 \
                    libatk-bridge2.0-0 \
                    libgdk-pixbuf2.0-dev \
                    libgtk-3-0 \
                    libgbm1
                  sudo add-apt-repository -y ppa:alexlarsson/flatpak
      - run-fast-tests
      - store_test_results:
          path: ./reports/
  slow-tests:
    parameters:
      executor:
        type: string
      arch:
        type: enum
        enum: ['x64', 'arm64']
    executor: << parameters.executor >>
    parallelism: 2
    steps:
      - install
      - when:
          condition:
            equal: [node/windows, << parameters.executor >>]
          steps:
            - node/install-packages
            - run:
                name: setup Windows and run slow tests
                shell: bash
                command: |
                  echo "Installing WiX Toolset"
                  choco install --no-progress -y wixtoolset
                  echo "Reloading PATH"
                  export PATH="$PATH;C:\Program Files (x86)\WiX Toolset v3.11\bin"
                  npm config set node-gyp "$CIRCLE_WORKING_DIRECTORY\node_modules\node-gyp\bin\node-gyp.js"
                  yarn lint
                  yarn syncpack
                  yarn build
                  echo $(circleci tests glob "packages/**/*_spec_slow.ts")
                  TESTS=$(circleci tests glob "packages/**/*_spec_slow.ts" | circleci tests split --split-by=timings)
                  yarn test $TESTS
            - store_test_results:
                path: ./reports/
      - when:
          condition:
            equal: [node/linux, << parameters.executor >>]
          steps:
            - run:
                name: Linux specific setup
                command: |
                  sudo apt-get update
                  sudo apt-get install -y \
                    --no-install-recommends \
                    xvfb \
                    libnss3 \
                    libasound2 \
                    libatk1.0-0 \
                    libatk-bridge2.0-0 \
                    libgdk-pixbuf2.0-dev \
                    libgtk-3-0 \
                    libgbm1
      - when:
          condition:
            or:
              - equal: [node/macos, << parameters.executor >>]
              - equal: [node/linux, << parameters.executor >>]
          steps:
            - run-slow-tests
            - store_test_results:
                path: ./reports/

workflows:
  tests:
    jobs:
      - lint-and-build
      - fast-tests:
          requires:
            - lint-and-build
          matrix:
            parameters:
              executor: [node/windows, node/linux, node/macos]
              arch: [x64, arm64]
            exclude:
              - executor: node/windows
                arch: arm64
              - executor: node/linux
                arch: arm64
      - slow-tests:
          requires:
            - lint-and-build
          matrix:
            parameters:
              executor: [node/windows, node/linux, node/macos]
              arch: [x64, arm64]
            exclude:
              - executor: node/windows
                arch: arm64
              - executor: node/linux
                arch: arm64
